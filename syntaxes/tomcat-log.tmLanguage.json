{
    "name": "Tomcat Log",
    "scopeName": "source.tomcat-log",
    "patterns": [
        {
            "name": "meta.http.admin.tomcat",
            "match": "(\\[\\d{1,2}/\\d{1,2}/\\d{4}, \\d{1,2}:\\d{2}:\\d{2} [AP]M\\])\\s+(\\[HTTP\\])\\s+(admin)\\s+-\\s+(GET|POST|PUT|DELETE)\\s+-\\s+(\\S+)\\s+-\\s+(\\d{3}|-)\\s+-\\s+(\\d+|-|)",
            "captures": {
                "1": {
                    "name": "meta.timestamp.tomcat"
                },
                "2": {
                    "name": "support.type.log-level.http.tomcat"
                },
                "3": {
                    "name": "entity.name.user.admin.tomcat"
                },
                "4": {
                    "name": "http.method.tomcat"
                },
                "5": {
                    "name": "http.path.tomcat"
                },
                "6": {
                    "name": "http.status.code.tomcat",
                    "patterns": [
                        {
                            "match": "\\b(2\\d{2})\\b",
                            "name": "http.status.success.tomcat"
                        }
                    ]
                },
                "7": {
                    "name": "http.response.size.tomcat"
                }
            }
        },
        {
            "name": "meta.http.log.tomcat",
            "match": "(\\[\\d{1,2}/\\d{1,2}/\\d{4}, \\d{1,2}:\\d{2}:\\d{2} [AP]M\\])\\s+(\\[HTTP\\])\\s+(GET|POST|PUT|DELETE)\\s+-\\s+(\\S+)\\s+-\\s+(\\d{3}|-)\\s+-\\s+(\\d+|-|)",
            "captures": {
                "1": {
                    "name": "meta.timestamp.tomcat"
                },
                "2": {
                    "name": "support.type.log-level.http.tomcat"
                },
                "3": {
                    "name": "http.method.tomcat"
                },
                "4": {
                    "name": "http.path.tomcat"
                },
                "5": {
                    "name": "http.status.code.tomcat",
                    "patterns": [
                        {
                            "match": "\\b(2\\d{2})\\b",
                            "name": "http.status.success.tomcat"
                        }
                    ]
                },
                "6": {
                    "name": "http.response.size.tomcat"
                }
            }
        },
        {
            "name": "constant.numeric.build-duration.tomcat",
            "match": "(\\b\\d+ms)(?=\\s*$)",
            "captures": {
                "1": {
                    "name": "constant.numeric.build-duration.tomcat"
                }
            }
        },
        {
            "name": "meta.timestamp.tomcat",
            "match": "(\\[\\d{1,2}/\\d{1,2}/\\d{4}, \\d{1,2}:\\d{2}:\\d{2} [AP]M\\])",
            "captures": {
                "1": {
                    "name": "meta.timestamp.tomcat"
                }
            }
        },
        {
            "name": "support.type.log-level.info.tomcat",
            "match": "\\b(INFO|HTTP|APP)\\b",
            "captures": {
                "1": {
                    "name": "support.type.log-level.info.tomcat"
                }
            }
        },
        {
            "name": "support.type.log-level.debug.tomcat",
            "match": "(\\DEBUG)",
            "captures": {
                "1": {
                    "name": "support.type.log-level.debug.tomcat"
                }
            }
        },
        {
            "name": "support.type.log-level.error.tomcat",
            "match": "(\\ERROR)",
            "captures": {
                "1": {
                    "name": "support.type.log-level.error.tomcat"
                }
            }
        },
        {
            "name": "support.type.log-level.success.tomcat",
            "match": "\\b(SUCCESS)\\b",
            "captures": {
                "1": {
                    "name": "support.type.log-level.success.tomcat"
                }
            }
        },
        {
            "name": "support.type.log-level.warn.tomcat",
            "match": "(\\WARN)",
            "captures": {
                "1": {
                    "name": "support.type.log-level.warn.tomcat"
                }
            }
        },
        {
            "name": "entity.name.log-level.brackets.tomcat",
            "match": "(\\[|\\])",
            "captures": {
                "1": {
                    "name": "entity.name.log-level.brackets.tomcat"
                }
            }
        },
        {
            "name": "entity.name.filename.java.tomcat",
            "match": "(?:[\\/\\\\])([^\\/\\\\]+\\.(?:java|class|jsp|xml|properties))(?=[:\\s])",
            "captures": {
                "1": {
                    "name": "entity.name.filename.java.tomcat"
                }
            }
        },
        {
            "name": "invalid.illegal.java.tomcat",
            "match": "(error:\\s*(?:'[^']+' expected|cannot find symbol|illegal start of type|class, interface, enum, or record expected|unnamed classes are a preview feature))",
            "captures": {
                "1": {
                    "name": "invalid.illegal.java.tomcat"
                }
            }
        },
        {
            "name": "markup.error.tomcat",
            "match": "(\\^+|~+)",
            "captures": {
                "1": {
                    "name": "markup.error.tomcat"
                }
            }
        },
        {
            "name": "variable.language.line-number.tomcat",
            "match": "(?::)(\\d+)(?=:?)",
            "captures": {
                "1": {
                    "name": "constant.numeric.integer.tomcat"
                }
            }
        },
        {
            "name": "storage.modifier.java.tomcat",
            "match": "\\b(public|private|protected|static|final|abstract|class|interface|extends|implements|transient|volatile|synchronized|native|strictfp)\\b"
        },
        {
            "name": "storage.type.java.tomcat",
            "match": "\\b(HttpServlet|String|HttpSession|HttpServletRequest|HttpServletResponse|void|boolean|int|long|short|byte|char|float|double|Object|List|Map|Set)\\b"
        },
        {
            "name": "entity.name.class.java.tomcat",
            "match": "\\b([A-Z][A-Za-z0-9_]*)\\b(?=\\s*(<|\\{|extends|implements))",
            "captures": {
                "1": {
                    "name": "entity.name.class.java.tomcat"
                }
            }
        },
        {
            "name": "entity.name.function.java.tomcat",
            "match": "(\\b\\w+\\b)(?=\\s*\\()",
            "captures": {
                "1": {
                    "name": "entity.name.function.java.tomcat"
                }
            }
        },
        {
            "name": "variable.parameter.java.tomcat",
            "match": "\\b(request|response|session|config)\\b"
        },
        {
            "name": "keyword.control.java.tomcat",
            "match": "\\b(if|else|return|throw|try|catch|finally|for|while|do|switch|case|default|break|continue|new)\\b"
        },
        {
            "name": "punctuation.section.block.java.tomcat",
            "match": "[{}]"
        },
        {
            "name": "string.quoted.double.java.tomcat",
            "match": "\"(?:\\\\\"|.)*?\""
        },
        {
            "name": "keyword.operator.java.tomcat",
            "match": "([=+\\-!><]=?|\\|\\||&&|instanceof|::|\\?|\\.\\.\\.)"
        },
        {
            "name": "constant.numeric.java.tomcat",
            "match": "\\b\\d+\\b"
        },
        {
            "name": "storage.type.annotation.java.tomcat",
            "match": "@\\w+"
        },
        {
            "name": "meta.annotation.parameters.java.tomcat",
            "match": "(?<=@\\w+)(\\([^)]+\\))",
            "captures": {
                "1": {
                    "name": "meta.annotation.parameters.java.tomcat"
                }
            }
        },
        {
            "name": "variable.other.object.java.tomcat",
            "match": "(?<=\\.)(getAttribute|setAttribute|getRequestDispatcher|forward|sendRedirect|getParameter|getWriter|println|print|close|flush)\\b"
        },
        {
            "name": "punctuation.terminator.java.tomcat",
            "match": ";"
        },
        {
            "name": "punctuation.separator.comma.java.tomcat",
            "match": ","
        },
        {
            "name": "punctuation.bracket.square.java.tomcat",
            "match": "[\\[\\]]"
        },
        {
            "name": "punctuation.bracket.round.java.tomcat",
            "match": "[()]"
        },
        {
            "name": "punctuation.bracket.angle.java.tomcat",
            "match": "[<>]"
        },
        {
            "name": "meta.package.java.tomcat",
            "match": "^\\s*(package)\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)*)\\s*;",
            "captures": {
                "1": {
                    "name": "storage.modifier.java.tomcat"
                },
                "2": {
                    "name": "entity.name.package.java.tomcat"
                }
            }
        },
        {
            "name": "meta.import.java.tomcat",
            "match": "^\\s*(import)\\s+(static\\s+)?([a-zA-Z_][a-zA-Z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)*(?:\\.\\*)?)\\s*;",
            "captures": {
                "1": {
                    "name": "keyword.control.import.java.tomcat"
                },
                "2": {
                    "name": "storage.modifier.java.tomcat"
                },
                "3": {
                    "name": "entity.name.package.java.tomcat"
                }
            }
        },
        {
            "name": "meta.maven.error",
            "match": "(Failed to execute goal .*?Compilation failure)",
            "captures": {
                "1": {
                    "name": "invalid.illegal.java.tomcat"
                }
            }
        },
        {
            "name": "markup.underline.link.tomcat",
            "match": "(http[s]?://[^\\s]+)",
            "captures": {
                "1": {
                    "name": "markup.underline.link.tomcat"
                }
            }
        }
    ]
}